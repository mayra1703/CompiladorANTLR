// Generated from c:/Users/mayme/OneDrive/Desktop/automatas2/practica02/proyectoAutomatas/grammar/LexerRules.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class LexerRules extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		STRING=1, PLUS=2, MINUS=3, MULT=4, DIV=5, IGUAL=6, OC=7, OL=8, VOID=9, 
		MAIN=10, INITPAR=11, FINALPAR=12, IF=13, ELSEIF=14, ELSE=15, PRINTF=16, 
		INITKEY=17, FINALKEY=18, SEMI=19, INT=20, ID=21, INV_ID=22, WRONGID=23, 
		LINECOMMENT=24, COMMENT=25, NEWLINE=26, SPACES=27;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"STRING", "PLUS", "MINUS", "MULT", "DIV", "IGUAL", "OC", "OL", "VOID", 
			"MAIN", "INITPAR", "FINALPAR", "IF", "ELSEIF", "ELSE", "PRINTF", "INITKEY", 
			"FINALKEY", "SEMI", "INT", "ID", "INV_ID", "WRONGID", "LINECOMMENT", 
			"COMMENT", "NEWLINE", "SPACES"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, "'+'", "'-'", "'*'", "'/'", "'='", null, null, "'void'", 
			"'main'", "'('", "')'", "'if'", "'else if'", "'else'", "'printf'", "'{'", 
			"'}'", "';'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "STRING", "PLUS", "MINUS", "MULT", "DIV", "IGUAL", "OC", "OL", 
			"VOID", "MAIN", "INITPAR", "FINALPAR", "IF", "ELSEIF", "ELSE", "PRINTF", 
			"INITKEY", "FINALKEY", "SEMI", "INT", "ID", "INV_ID", "WRONGID", "LINECOMMENT", 
			"COMMENT", "NEWLINE", "SPACES"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LexerRules(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LexerRules.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001b\u00d0\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0001\u0000\u0001\u0000\u0005\u0000:\b\u0000\n\u0000\f\u0000=\t\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0003\u0006R\b\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0003\u0007c\b\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t"+
		"\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001\u000b"+
		"\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001"+
		"\r\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001\u000f\u0001"+
		"\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001"+
		"\u0012\u0001\u0012\u0001\u0013\u0004\u0013\u0091\b\u0013\u000b\u0013\f"+
		"\u0013\u0092\u0001\u0014\u0001\u0014\u0004\u0014\u0097\b\u0014\u000b\u0014"+
		"\f\u0014\u0098\u0003\u0014\u009b\b\u0014\u0001\u0015\u0004\u0015\u009e"+
		"\b\u0015\u000b\u0015\f\u0015\u009f\u0001\u0016\u0004\u0016\u00a3\b\u0016"+
		"\u000b\u0016\f\u0016\u00a4\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017"+
		"\u0005\u0017\u00ab\b\u0017\n\u0017\f\u0017\u00ae\t\u0017\u0001\u0017\u0003"+
		"\u0017\u00b1\b\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001\u0017\u0001"+
		"\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0005\u0018\u00bb\b\u0018\n"+
		"\u0018\f\u0018\u00be\t\u0018\u0001\u0018\u0001\u0018\u0001\u0018\u0001"+
		"\u0018\u0001\u0018\u0001\u0019\u0003\u0019\u00c6\b\u0019\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0004\u001a\u00cb\b\u001a\u000b\u001a\f\u001a\u00cc"+
		"\u0001\u001a\u0001\u001a\u0003;\u00ac\u00bc\u0000\u001b\u0001\u0001\u0003"+
		"\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011"+
		"\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010"+
		"!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a"+
		"5\u001b\u0001\u0000\u0007\u0002\u0000<<>>\u0001\u000009\u0002\u0000AZ"+
		"az\u0004\u000009AZ__az\u0005\u0000++--09AZaz\u0006\u0000*+--/9AZ__az\u0003"+
		"\u0000\t\n\r\r  \u00e1\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003"+
		"\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007"+
		"\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001"+
		"\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000"+
		"\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000"+
		"\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000"+
		"\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000"+
		"\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000"+
		"\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000"+
		"\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000"+
		")\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001"+
		"\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000"+
		"\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u0001"+
		"7\u0001\u0000\u0000\u0000\u0003@\u0001\u0000\u0000\u0000\u0005B\u0001"+
		"\u0000\u0000\u0000\u0007D\u0001\u0000\u0000\u0000\tF\u0001\u0000\u0000"+
		"\u0000\u000bH\u0001\u0000\u0000\u0000\rQ\u0001\u0000\u0000\u0000\u000f"+
		"b\u0001\u0000\u0000\u0000\u0011d\u0001\u0000\u0000\u0000\u0013i\u0001"+
		"\u0000\u0000\u0000\u0015n\u0001\u0000\u0000\u0000\u0017p\u0001\u0000\u0000"+
		"\u0000\u0019r\u0001\u0000\u0000\u0000\u001bu\u0001\u0000\u0000\u0000\u001d"+
		"}\u0001\u0000\u0000\u0000\u001f\u0082\u0001\u0000\u0000\u0000!\u0089\u0001"+
		"\u0000\u0000\u0000#\u008b\u0001\u0000\u0000\u0000%\u008d\u0001\u0000\u0000"+
		"\u0000\'\u0090\u0001\u0000\u0000\u0000)\u0094\u0001\u0000\u0000\u0000"+
		"+\u009d\u0001\u0000\u0000\u0000-\u00a2\u0001\u0000\u0000\u0000/\u00a6"+
		"\u0001\u0000\u0000\u00001\u00b6\u0001\u0000\u0000\u00003\u00c5\u0001\u0000"+
		"\u0000\u00005\u00ca\u0001\u0000\u0000\u00007;\u0005\"\u0000\u00008:\t"+
		"\u0000\u0000\u000098\u0001\u0000\u0000\u0000:=\u0001\u0000\u0000\u0000"+
		";<\u0001\u0000\u0000\u0000;9\u0001\u0000\u0000\u0000<>\u0001\u0000\u0000"+
		"\u0000=;\u0001\u0000\u0000\u0000>?\u0005\"\u0000\u0000?\u0002\u0001\u0000"+
		"\u0000\u0000@A\u0005+\u0000\u0000A\u0004\u0001\u0000\u0000\u0000BC\u0005"+
		"-\u0000\u0000C\u0006\u0001\u0000\u0000\u0000DE\u0005*\u0000\u0000E\b\u0001"+
		"\u0000\u0000\u0000FG\u0005/\u0000\u0000G\n\u0001\u0000\u0000\u0000HI\u0005"+
		"=\u0000\u0000I\f\u0001\u0000\u0000\u0000JR\u0007\u0000\u0000\u0000KL\u0005"+
		"<\u0000\u0000LR\u0005=\u0000\u0000MN\u0005>\u0000\u0000NR\u0005=\u0000"+
		"\u0000OP\u0005!\u0000\u0000PR\u0005=\u0000\u0000QJ\u0001\u0000\u0000\u0000"+
		"QK\u0001\u0000\u0000\u0000QM\u0001\u0000\u0000\u0000QO\u0001\u0000\u0000"+
		"\u0000R\u000e\u0001\u0000\u0000\u0000ST\u0005|\u0000\u0000Tc\u0005|\u0000"+
		"\u0000UV\u0005&\u0000\u0000Vc\u0005&\u0000\u0000WX\u0005=\u0000\u0000"+
		"Xc\u0005=\u0000\u0000YZ\u0005t\u0000\u0000Z[\u0005r\u0000\u0000[\\\u0005"+
		"u\u0000\u0000\\c\u0005e\u0000\u0000]^\u0005f\u0000\u0000^_\u0005a\u0000"+
		"\u0000_`\u0005l\u0000\u0000`a\u0005s\u0000\u0000ac\u0005e\u0000\u0000"+
		"bS\u0001\u0000\u0000\u0000bU\u0001\u0000\u0000\u0000bW\u0001\u0000\u0000"+
		"\u0000bY\u0001\u0000\u0000\u0000b]\u0001\u0000\u0000\u0000c\u0010\u0001"+
		"\u0000\u0000\u0000de\u0005v\u0000\u0000ef\u0005o\u0000\u0000fg\u0005i"+
		"\u0000\u0000gh\u0005d\u0000\u0000h\u0012\u0001\u0000\u0000\u0000ij\u0005"+
		"m\u0000\u0000jk\u0005a\u0000\u0000kl\u0005i\u0000\u0000lm\u0005n\u0000"+
		"\u0000m\u0014\u0001\u0000\u0000\u0000no\u0005(\u0000\u0000o\u0016\u0001"+
		"\u0000\u0000\u0000pq\u0005)\u0000\u0000q\u0018\u0001\u0000\u0000\u0000"+
		"rs\u0005i\u0000\u0000st\u0005f\u0000\u0000t\u001a\u0001\u0000\u0000\u0000"+
		"uv\u0005e\u0000\u0000vw\u0005l\u0000\u0000wx\u0005s\u0000\u0000xy\u0005"+
		"e\u0000\u0000yz\u0005 \u0000\u0000z{\u0005i\u0000\u0000{|\u0005f\u0000"+
		"\u0000|\u001c\u0001\u0000\u0000\u0000}~\u0005e\u0000\u0000~\u007f\u0005"+
		"l\u0000\u0000\u007f\u0080\u0005s\u0000\u0000\u0080\u0081\u0005e\u0000"+
		"\u0000\u0081\u001e\u0001\u0000\u0000\u0000\u0082\u0083\u0005p\u0000\u0000"+
		"\u0083\u0084\u0005r\u0000\u0000\u0084\u0085\u0005i\u0000\u0000\u0085\u0086"+
		"\u0005n\u0000\u0000\u0086\u0087\u0005t\u0000\u0000\u0087\u0088\u0005f"+
		"\u0000\u0000\u0088 \u0001\u0000\u0000\u0000\u0089\u008a\u0005{\u0000\u0000"+
		"\u008a\"\u0001\u0000\u0000\u0000\u008b\u008c\u0005}\u0000\u0000\u008c"+
		"$\u0001\u0000\u0000\u0000\u008d\u008e\u0005;\u0000\u0000\u008e&\u0001"+
		"\u0000\u0000\u0000\u008f\u0091\u0007\u0001\u0000\u0000\u0090\u008f\u0001"+
		"\u0000\u0000\u0000\u0091\u0092\u0001\u0000\u0000\u0000\u0092\u0090\u0001"+
		"\u0000\u0000\u0000\u0092\u0093\u0001\u0000\u0000\u0000\u0093(\u0001\u0000"+
		"\u0000\u0000\u0094\u009a\u0007\u0002\u0000\u0000\u0095\u0097\u0007\u0003"+
		"\u0000\u0000\u0096\u0095\u0001\u0000\u0000\u0000\u0097\u0098\u0001\u0000"+
		"\u0000\u0000\u0098\u0096\u0001\u0000\u0000\u0000\u0098\u0099\u0001\u0000"+
		"\u0000\u0000\u0099\u009b\u0001\u0000\u0000\u0000\u009a\u0096\u0001\u0000"+
		"\u0000\u0000\u009a\u009b\u0001\u0000\u0000\u0000\u009b*\u0001\u0000\u0000"+
		"\u0000\u009c\u009e\u0007\u0004\u0000\u0000\u009d\u009c\u0001\u0000\u0000"+
		"\u0000\u009e\u009f\u0001\u0000\u0000\u0000\u009f\u009d\u0001\u0000\u0000"+
		"\u0000\u009f\u00a0\u0001\u0000\u0000\u0000\u00a0,\u0001\u0000\u0000\u0000"+
		"\u00a1\u00a3\u0007\u0005\u0000\u0000\u00a2\u00a1\u0001\u0000\u0000\u0000"+
		"\u00a3\u00a4\u0001\u0000\u0000\u0000\u00a4\u00a2\u0001\u0000\u0000\u0000"+
		"\u00a4\u00a5\u0001\u0000\u0000\u0000\u00a5.\u0001\u0000\u0000\u0000\u00a6"+
		"\u00a7\u0005/\u0000\u0000\u00a7\u00a8\u0005/\u0000\u0000\u00a8\u00ac\u0001"+
		"\u0000\u0000\u0000\u00a9\u00ab\t\u0000\u0000\u0000\u00aa\u00a9\u0001\u0000"+
		"\u0000\u0000\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac\u00ad\u0001\u0000"+
		"\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000\u00ad\u00b0\u0001\u0000"+
		"\u0000\u0000\u00ae\u00ac\u0001\u0000\u0000\u0000\u00af\u00b1\u0005\r\u0000"+
		"\u0000\u00b0\u00af\u0001\u0000\u0000\u0000\u00b0\u00b1\u0001\u0000\u0000"+
		"\u0000\u00b1\u00b2\u0001\u0000\u0000\u0000\u00b2\u00b3\u0005\n\u0000\u0000"+
		"\u00b3\u00b4\u0001\u0000\u0000\u0000\u00b4\u00b5\u0006\u0017\u0000\u0000"+
		"\u00b50\u0001\u0000\u0000\u0000\u00b6\u00b7\u0005/\u0000\u0000\u00b7\u00b8"+
		"\u0005*\u0000\u0000\u00b8\u00bc\u0001\u0000\u0000\u0000\u00b9\u00bb\t"+
		"\u0000\u0000\u0000\u00ba\u00b9\u0001\u0000\u0000\u0000\u00bb\u00be\u0001"+
		"\u0000\u0000\u0000\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bc\u00ba\u0001"+
		"\u0000\u0000\u0000\u00bd\u00bf\u0001\u0000\u0000\u0000\u00be\u00bc\u0001"+
		"\u0000\u0000\u0000\u00bf\u00c0\u0005*\u0000\u0000\u00c0\u00c1\u0005/\u0000"+
		"\u0000\u00c1\u00c2\u0001\u0000\u0000\u0000\u00c2\u00c3\u0006\u0018\u0000"+
		"\u0000\u00c32\u0001\u0000\u0000\u0000\u00c4\u00c6\u0005\r\u0000\u0000"+
		"\u00c5\u00c4\u0001\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000"+
		"\u00c6\u00c7\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005\n\u0000\u0000\u00c8"+
		"4\u0001\u0000\u0000\u0000\u00c9\u00cb\u0007\u0006\u0000\u0000\u00ca\u00c9"+
		"\u0001\u0000\u0000\u0000\u00cb\u00cc\u0001\u0000\u0000\u0000\u00cc\u00ca"+
		"\u0001\u0000\u0000\u0000\u00cc\u00cd\u0001\u0000\u0000\u0000\u00cd\u00ce"+
		"\u0001\u0000\u0000\u0000\u00ce\u00cf\u0006\u001a\u0000\u0000\u00cf6\u0001"+
		"\u0000\u0000\u0000\u000e\u0000;Qb\u0092\u0098\u009a\u009f\u00a4\u00ac"+
		"\u00b0\u00bc\u00c5\u00cc\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}