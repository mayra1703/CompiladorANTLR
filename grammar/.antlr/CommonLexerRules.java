// Generated from c:/Users/mayme/OneDrive/Desktop/automatas2/practica02/proyectoAutomatas/grammar/CommonLexerRules.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class CommonLexerRules extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		TYPE=1, STRING=2, PLUS=3, MINUS=4, TIMES=5, DIV=6, OC=7, OL=8, BOOL=9, 
		SWEET=10, SWEETCONDITION=11, ELSE=12, ARROW=13, SHOW=14, INITKEY=15, FINALKEY=16, 
		GATITO=17, PUNTITO=18, NUM=19, ID=20, WRONGID=21, LINECOMMENT=22, COMMENT=23, 
		NEWLINE=24, SPACES=25;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"TYPE", "STRING", "PLUS", "MINUS", "TIMES", "DIV", "OC", "OL", "BOOL", 
			"SWEET", "SWEETCONDITION", "ELSE", "ARROW", "SHOW", "INITKEY", "FINALKEY", 
			"GATITO", "PUNTITO", "NUM", "ID", "WRONGID", "LINECOMMENT", "COMMENT", 
			"NEWLINE", "SPACES"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'+'", "'-'", "'*'", "'/'", null, null, null, "'Sweet'", 
			"'SweetCondition'", "'Else'", "'->'", "'SHOW'", "'{'", "'}'", "'#'", 
			"'.'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "TYPE", "STRING", "PLUS", "MINUS", "TIMES", "DIV", "OC", "OL", 
			"BOOL", "SWEET", "SWEETCONDITION", "ELSE", "ARROW", "SHOW", "INITKEY", 
			"FINALKEY", "GATITO", "PUNTITO", "NUM", "ID", "WRONGID", "LINECOMMENT", 
			"COMMENT", "NEWLINE", "SPACES"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public CommonLexerRules(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "CommonLexerRules.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u0019\u00d9\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0000\u0003\u0000H\b\u0000"+
		"\u0001\u0001\u0001\u0001\u0005\u0001L\b\u0001\n\u0001\f\u0001O\t\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006\u0003\u0006"+
		"b\b\u0006\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0003\u0007j\b\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\b\u0001\b\u0001\b\u0001\b\u0001\b\u0003\bu\b\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\f"+
		"\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\r\u0001\r\u0001\u000e\u0001"+
		"\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001"+
		"\u0011\u0001\u0012\u0004\u0012\u00a2\b\u0012\u000b\u0012\f\u0012\u00a3"+
		"\u0001\u0013\u0004\u0013\u00a7\b\u0013\u000b\u0013\f\u0013\u00a8\u0001"+
		"\u0014\u0004\u0014\u00ac\b\u0014\u000b\u0014\f\u0014\u00ad\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0005\u0015\u00b4\b\u0015\n\u0015"+
		"\f\u0015\u00b7\t\u0015\u0001\u0015\u0003\u0015\u00ba\b\u0015\u0001\u0015"+
		"\u0001\u0015\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016"+
		"\u0001\u0016\u0005\u0016\u00c4\b\u0016\n\u0016\f\u0016\u00c7\t\u0016\u0001"+
		"\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0003"+
		"\u0017\u00cf\b\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0004\u0018\u00d4"+
		"\b\u0018\u000b\u0018\f\u0018\u00d5\u0001\u0018\u0001\u0018\u0003M\u00b5"+
		"\u00c5\u0000\u0019\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005"+
		"\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019"+
		"\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015"+
		"+\u0016-\u0017/\u00181\u0019\u0001\u0000\u0005\u0002\u0000<<>>\u0001\u0000"+
		"09\u0002\u0000AZaz\u0006\u0000*+--/9AZ__az\u0003\u0000\t\n\r\r  \u00e9"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0001G\u0001\u0000"+
		"\u0000\u0000\u0003I\u0001\u0000\u0000\u0000\u0005R\u0001\u0000\u0000\u0000"+
		"\u0007T\u0001\u0000\u0000\u0000\tV\u0001\u0000\u0000\u0000\u000bX\u0001"+
		"\u0000\u0000\u0000\ra\u0001\u0000\u0000\u0000\u000fi\u0001\u0000\u0000"+
		"\u0000\u0011t\u0001\u0000\u0000\u0000\u0013v\u0001\u0000\u0000\u0000\u0015"+
		"|\u0001\u0000\u0000\u0000\u0017\u008b\u0001\u0000\u0000\u0000\u0019\u0090"+
		"\u0001\u0000\u0000\u0000\u001b\u0093\u0001\u0000\u0000\u0000\u001d\u0098"+
		"\u0001\u0000\u0000\u0000\u001f\u009a\u0001\u0000\u0000\u0000!\u009c\u0001"+
		"\u0000\u0000\u0000#\u009e\u0001\u0000\u0000\u0000%\u00a1\u0001\u0000\u0000"+
		"\u0000\'\u00a6\u0001\u0000\u0000\u0000)\u00ab\u0001\u0000\u0000\u0000"+
		"+\u00af\u0001\u0000\u0000\u0000-\u00bf\u0001\u0000\u0000\u0000/\u00ce"+
		"\u0001\u0000\u0000\u00001\u00d3\u0001\u0000\u0000\u000034\u0005m\u0000"+
		"\u000045\u0005i\u0000\u000056\u0005n\u0000\u00006H\u0005t\u0000\u0000"+
		"78\u0005m\u0000\u000089\u0005i\u0000\u00009:\u0005n\u0000\u0000:;\u0005"+
		"t\u0000\u0000;<\u0005c\u0000\u0000<=\u0005h\u0000\u0000=>\u0005a\u0000"+
		"\u0000>H\u0005r\u0000\u0000?@\u0005m\u0000\u0000@A\u0005i\u0000\u0000"+
		"AB\u0005n\u0000\u0000BC\u0005t\u0000\u0000CD\u0005f\u0000\u0000DE\u0005"+
		"l\u0000\u0000EF\u0005o\u0000\u0000FH\u0005t\u0000\u0000G3\u0001\u0000"+
		"\u0000\u0000G7\u0001\u0000\u0000\u0000G?\u0001\u0000\u0000\u0000H\u0002"+
		"\u0001\u0000\u0000\u0000IM\u0005\"\u0000\u0000JL\t\u0000\u0000\u0000K"+
		"J\u0001\u0000\u0000\u0000LO\u0001\u0000\u0000\u0000MN\u0001\u0000\u0000"+
		"\u0000MK\u0001\u0000\u0000\u0000NP\u0001\u0000\u0000\u0000OM\u0001\u0000"+
		"\u0000\u0000PQ\u0005\"\u0000\u0000Q\u0004\u0001\u0000\u0000\u0000RS\u0005"+
		"+\u0000\u0000S\u0006\u0001\u0000\u0000\u0000TU\u0005-\u0000\u0000U\b\u0001"+
		"\u0000\u0000\u0000VW\u0005*\u0000\u0000W\n\u0001\u0000\u0000\u0000XY\u0005"+
		"/\u0000\u0000Y\f\u0001\u0000\u0000\u0000Zb\u0007\u0000\u0000\u0000[\\"+
		"\u0005<\u0000\u0000\\b\u0005=\u0000\u0000]^\u0005>\u0000\u0000^b\u0005"+
		"=\u0000\u0000_`\u0005!\u0000\u0000`b\u0005=\u0000\u0000aZ\u0001\u0000"+
		"\u0000\u0000a[\u0001\u0000\u0000\u0000a]\u0001\u0000\u0000\u0000a_\u0001"+
		"\u0000\u0000\u0000b\u000e\u0001\u0000\u0000\u0000cd\u0005|\u0000\u0000"+
		"dj\u0005|\u0000\u0000ef\u0005&\u0000\u0000fj\u0005&\u0000\u0000gh\u0005"+
		"=\u0000\u0000hj\u0005=\u0000\u0000ic\u0001\u0000\u0000\u0000ie\u0001\u0000"+
		"\u0000\u0000ig\u0001\u0000\u0000\u0000j\u0010\u0001\u0000\u0000\u0000"+
		"kl\u0005t\u0000\u0000lm\u0005r\u0000\u0000mn\u0005u\u0000\u0000nu\u0005"+
		"e\u0000\u0000op\u0005f\u0000\u0000pq\u0005a\u0000\u0000qr\u0005l\u0000"+
		"\u0000rs\u0005s\u0000\u0000su\u0005e\u0000\u0000tk\u0001\u0000\u0000\u0000"+
		"to\u0001\u0000\u0000\u0000u\u0012\u0001\u0000\u0000\u0000vw\u0005S\u0000"+
		"\u0000wx\u0005w\u0000\u0000xy\u0005e\u0000\u0000yz\u0005e\u0000\u0000"+
		"z{\u0005t\u0000\u0000{\u0014\u0001\u0000\u0000\u0000|}\u0005S\u0000\u0000"+
		"}~\u0005w\u0000\u0000~\u007f\u0005e\u0000\u0000\u007f\u0080\u0005e\u0000"+
		"\u0000\u0080\u0081\u0005t\u0000\u0000\u0081\u0082\u0005C\u0000\u0000\u0082"+
		"\u0083\u0005o\u0000\u0000\u0083\u0084\u0005n\u0000\u0000\u0084\u0085\u0005"+
		"d\u0000\u0000\u0085\u0086\u0005i\u0000\u0000\u0086\u0087\u0005t\u0000"+
		"\u0000\u0087\u0088\u0005i\u0000\u0000\u0088\u0089\u0005o\u0000\u0000\u0089"+
		"\u008a\u0005n\u0000\u0000\u008a\u0016\u0001\u0000\u0000\u0000\u008b\u008c"+
		"\u0005E\u0000\u0000\u008c\u008d\u0005l\u0000\u0000\u008d\u008e\u0005s"+
		"\u0000\u0000\u008e\u008f\u0005e\u0000\u0000\u008f\u0018\u0001\u0000\u0000"+
		"\u0000\u0090\u0091\u0005-\u0000\u0000\u0091\u0092\u0005>\u0000\u0000\u0092"+
		"\u001a\u0001\u0000\u0000\u0000\u0093\u0094\u0005S\u0000\u0000\u0094\u0095"+
		"\u0005H\u0000\u0000\u0095\u0096\u0005O\u0000\u0000\u0096\u0097\u0005W"+
		"\u0000\u0000\u0097\u001c\u0001\u0000\u0000\u0000\u0098\u0099\u0005{\u0000"+
		"\u0000\u0099\u001e\u0001\u0000\u0000\u0000\u009a\u009b\u0005}\u0000\u0000"+
		"\u009b \u0001\u0000\u0000\u0000\u009c\u009d\u0005#\u0000\u0000\u009d\""+
		"\u0001\u0000\u0000\u0000\u009e\u009f\u0005.\u0000\u0000\u009f$\u0001\u0000"+
		"\u0000\u0000\u00a0\u00a2\u0007\u0001\u0000\u0000\u00a1\u00a0\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a3\u0001\u0000\u0000\u0000\u00a3\u00a1\u0001\u0000"+
		"\u0000\u0000\u00a3\u00a4\u0001\u0000\u0000\u0000\u00a4&\u0001\u0000\u0000"+
		"\u0000\u00a5\u00a7\u0007\u0002\u0000\u0000\u00a6\u00a5\u0001\u0000\u0000"+
		"\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8\u00a6\u0001\u0000\u0000"+
		"\u0000\u00a8\u00a9\u0001\u0000\u0000\u0000\u00a9(\u0001\u0000\u0000\u0000"+
		"\u00aa\u00ac\u0007\u0003\u0000\u0000\u00ab\u00aa\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad\u00ab\u0001\u0000\u0000\u0000"+
		"\u00ad\u00ae\u0001\u0000\u0000\u0000\u00ae*\u0001\u0000\u0000\u0000\u00af"+
		"\u00b0\u0005/\u0000\u0000\u00b0\u00b1\u0005/\u0000\u0000\u00b1\u00b5\u0001"+
		"\u0000\u0000\u0000\u00b2\u00b4\t\u0000\u0000\u0000\u00b3\u00b2\u0001\u0000"+
		"\u0000\u0000\u00b4\u00b7\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000"+
		"\u0000\u0000\u00b5\u00b3\u0001\u0000\u0000\u0000\u00b6\u00b9\u0001\u0000"+
		"\u0000\u0000\u00b7\u00b5\u0001\u0000\u0000\u0000\u00b8\u00ba\u0005\r\u0000"+
		"\u0000\u00b9\u00b8\u0001\u0000\u0000\u0000\u00b9\u00ba\u0001\u0000\u0000"+
		"\u0000\u00ba\u00bb\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005\n\u0000\u0000"+
		"\u00bc\u00bd\u0001\u0000\u0000\u0000\u00bd\u00be\u0006\u0015\u0000\u0000"+
		"\u00be,\u0001\u0000\u0000\u0000\u00bf\u00c0\u0005/\u0000\u0000\u00c0\u00c1"+
		"\u0005*\u0000\u0000\u00c1\u00c5\u0001\u0000\u0000\u0000\u00c2\u00c4\t"+
		"\u0000\u0000\u0000\u00c3\u00c2\u0001\u0000\u0000\u0000\u00c4\u00c7\u0001"+
		"\u0000\u0000\u0000\u00c5\u00c6\u0001\u0000\u0000\u0000\u00c5\u00c3\u0001"+
		"\u0000\u0000\u0000\u00c6\u00c8\u0001\u0000\u0000\u0000\u00c7\u00c5\u0001"+
		"\u0000\u0000\u0000\u00c8\u00c9\u0005*\u0000\u0000\u00c9\u00ca\u0005/\u0000"+
		"\u0000\u00ca\u00cb\u0001\u0000\u0000\u0000\u00cb\u00cc\u0006\u0016\u0000"+
		"\u0000\u00cc.\u0001\u0000\u0000\u0000\u00cd\u00cf\u0005\r\u0000\u0000"+
		"\u00ce\u00cd\u0001\u0000\u0000\u0000\u00ce\u00cf\u0001\u0000\u0000\u0000"+
		"\u00cf\u00d0\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005\n\u0000\u0000\u00d1"+
		"0\u0001\u0000\u0000\u0000\u00d2\u00d4\u0007\u0004\u0000\u0000\u00d3\u00d2"+
		"\u0001\u0000\u0000\u0000\u00d4\u00d5\u0001\u0000\u0000\u0000\u00d5\u00d3"+
		"\u0001\u0000\u0000\u0000\u00d5\u00d6\u0001\u0000\u0000\u0000\u00d6\u00d7"+
		"\u0001\u0000\u0000\u0000\u00d7\u00d8\u0006\u0018\u0000\u0000\u00d82\u0001"+
		"\u0000\u0000\u0000\u000e\u0000GMait\u00a3\u00a8\u00ad\u00b5\u00b9\u00c5"+
		"\u00ce\u00d5\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}