// Generated from ./grammar/MoonlightToC.g4 by ANTLR 4.13.1
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,34,317,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,
12,2,13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,
2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,
27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,1,0,
1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,
1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,3,2,99,8,2,1,3,1,3,1,4,1,4,1,5,1,
5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,9,1,9,3,9,120,8,9,1,10,1,
10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,10,
1,10,1,10,1,10,1,10,1,10,3,10,143,8,10,1,11,1,11,1,11,1,11,1,11,1,11,1,11,
1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,
12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,
15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,
1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,1,
19,1,19,1,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,5,24,237,
8,24,10,24,12,24,240,9,24,1,24,1,24,1,25,3,25,245,8,25,1,25,4,25,248,8,25,
11,25,12,25,249,1,26,1,26,3,26,254,8,26,1,26,1,26,1,27,4,27,259,8,27,11,
27,12,27,260,1,27,1,27,4,27,265,8,27,11,27,12,27,266,1,28,4,28,270,8,28,
11,28,12,28,271,1,29,1,29,1,29,1,29,5,29,278,8,29,10,29,12,29,281,9,29,1,
29,3,29,284,8,29,1,29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,5,30,294,8,30,10,
30,12,30,297,9,30,1,30,1,30,1,30,1,30,1,30,1,31,3,31,305,8,31,1,31,1,31,
1,32,4,32,310,8,32,11,32,12,32,311,1,32,1,32,1,33,1,33,3,238,279,295,0,34,
1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,
15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,
27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,1,0,6,2,0,60,60,62,62,1,0,48,
57,3,0,32,32,65,90,97,122,1,0,46,46,3,0,48,57,65,90,97,122,3,0,9,10,13,13,
32,32,337,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,
11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,
1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,
0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,
67,1,0,0,0,1,69,1,0,0,0,3,71,1,0,0,0,5,98,1,0,0,0,7,100,1,0,0,0,9,102,1,
0,0,0,11,104,1,0,0,0,13,106,1,0,0,0,15,108,1,0,0,0,17,110,1,0,0,0,19,119,
1,0,0,0,21,142,1,0,0,0,23,144,1,0,0,0,25,158,1,0,0,0,27,172,1,0,0,0,29,187,
1,0,0,0,31,192,1,0,0,0,33,202,1,0,0,0,35,212,1,0,0,0,37,215,1,0,0,0,39,218,
1,0,0,0,41,226,1,0,0,0,43,228,1,0,0,0,45,230,1,0,0,0,47,232,1,0,0,0,49,234,
1,0,0,0,51,244,1,0,0,0,53,251,1,0,0,0,55,258,1,0,0,0,57,269,1,0,0,0,59,273,
1,0,0,0,61,289,1,0,0,0,63,304,1,0,0,0,65,309,1,0,0,0,67,315,1,0,0,0,69,70,
5,40,0,0,70,2,1,0,0,0,71,72,5,41,0,0,72,4,1,0,0,0,73,74,5,114,0,0,74,75,
5,101,0,0,75,76,5,108,0,0,76,77,5,97,0,0,77,78,5,120,0,0,78,79,5,105,0,0,
79,80,5,110,0,0,80,99,5,116,0,0,81,82,5,110,0,0,82,83,5,105,0,0,83,84,5,
103,0,0,84,85,5,104,0,0,85,86,5,116,0,0,86,87,5,99,0,0,87,88,5,104,0,0,88,
89,5,97,0,0,89,99,5,114,0,0,90,91,5,115,0,0,91,92,5,107,0,0,92,93,5,121,
0,0,93,94,5,102,0,0,94,95,5,108,0,0,95,96,5,111,0,0,96,97,5,97,0,0,97,99,
5,116,0,0,98,73,1,0,0,0,98,81,1,0,0,0,98,90,1,0,0,0,99,6,1,0,0,0,100,101,
5,43,0,0,101,8,1,0,0,0,102,103,5,45,0,0,103,10,1,0,0,0,104,105,5,42,0,0,
105,12,1,0,0,0,106,107,5,47,0,0,107,14,1,0,0,0,108,109,5,37,0,0,109,16,1,
0,0,0,110,111,5,61,0,0,111,18,1,0,0,0,112,120,7,0,0,0,113,114,5,60,0,0,114,
120,5,61,0,0,115,116,5,62,0,0,116,120,5,61,0,0,117,118,5,33,0,0,118,120,
5,61,0,0,119,112,1,0,0,0,119,113,1,0,0,0,119,115,1,0,0,0,119,117,1,0,0,0,
120,20,1,0,0,0,121,122,5,124,0,0,122,143,5,124,0,0,123,124,5,38,0,0,124,
143,5,38,0,0,125,126,5,61,0,0,126,143,5,61,0,0,127,128,5,112,0,0,128,129,
5,101,0,0,129,130,5,97,0,0,130,131,5,99,0,0,131,132,5,101,0,0,132,133,5,
102,0,0,133,134,5,117,0,0,134,143,5,108,0,0,135,136,5,99,0,0,136,137,5,104,
0,0,137,138,5,97,0,0,138,139,5,111,0,0,139,140,5,116,0,0,140,141,5,105,0,
0,141,143,5,99,0,0,142,121,1,0,0,0,142,123,1,0,0,0,142,125,1,0,0,0,142,127,
1,0,0,0,142,135,1,0,0,0,143,22,1,0,0,0,144,145,5,83,0,0,145,146,5,101,0,
0,146,147,5,114,0,0,147,148,5,101,0,0,148,149,5,110,0,0,149,150,5,105,0,
0,150,151,5,116,0,0,151,152,5,121,0,0,152,153,5,67,0,0,153,154,5,108,0,0,
154,155,5,97,0,0,155,156,5,115,0,0,156,157,5,115,0,0,157,24,1,0,0,0,158,
159,5,67,0,0,159,160,5,111,0,0,160,161,5,122,0,0,161,162,5,121,0,0,162,163,
5,67,0,0,163,164,5,111,0,0,164,165,5,110,0,0,165,166,5,100,0,0,166,167,5,
105,0,0,167,168,5,116,0,0,168,169,5,105,0,0,169,170,5,111,0,0,170,171,5,
110,0,0,171,26,1,0,0,0,172,173,5,84,0,0,173,174,5,119,0,0,174,175,5,105,
0,0,175,176,5,108,0,0,176,177,5,105,0,0,177,178,5,103,0,0,178,179,5,104,
0,0,179,180,5,116,0,0,180,181,5,79,0,0,181,182,5,112,0,0,182,183,5,116,0,
0,183,184,5,105,0,0,184,185,5,111,0,0,185,186,5,110,0,0,186,28,1,0,0,0,187,
188,5,101,0,0,188,189,5,108,0,0,189,190,5,115,0,0,190,191,5,101,0,0,191,
30,1,0,0,0,192,193,5,68,0,0,193,194,5,114,0,0,194,195,5,101,0,0,195,196,
5,97,0,0,196,197,5,109,0,0,197,198,5,69,0,0,198,199,5,108,0,0,199,200,5,
115,0,0,200,201,5,101,0,0,201,32,1,0,0,0,202,203,5,68,0,0,203,204,5,114,
0,0,204,205,5,101,0,0,205,206,5,97,0,0,206,207,5,109,0,0,207,208,5,76,0,
0,208,209,5,111,0,0,209,210,5,111,0,0,210,211,5,112,0,0,211,34,1,0,0,0,212,
213,5,100,0,0,213,214,5,111,0,0,214,36,1,0,0,0,215,216,5,45,0,0,216,217,
5,62,0,0,217,38,1,0,0,0,218,219,5,87,0,0,219,220,5,72,0,0,220,221,5,73,0,
0,221,222,5,83,0,0,222,223,5,80,0,0,223,224,5,69,0,0,224,225,5,82,0,0,225,
40,1,0,0,0,226,227,5,123,0,0,227,42,1,0,0,0,228,229,5,125,0,0,229,44,1,0,
0,0,230,231,5,35,0,0,231,46,1,0,0,0,232,233,5,46,0,0,233,48,1,0,0,0,234,
238,5,34,0,0,235,237,9,0,0,0,236,235,1,0,0,0,237,240,1,0,0,0,238,239,1,0,
0,0,238,236,1,0,0,0,239,241,1,0,0,0,240,238,1,0,0,0,241,242,5,34,0,0,242,
50,1,0,0,0,243,245,3,9,4,0,244,243,1,0,0,0,244,245,1,0,0,0,245,247,1,0,0,
0,246,248,7,1,0,0,247,246,1,0,0,0,248,249,1,0,0,0,249,247,1,0,0,0,249,250,
1,0,0,0,250,52,1,0,0,0,251,253,5,34,0,0,252,254,7,2,0,0,253,252,1,0,0,0,
253,254,1,0,0,0,254,255,1,0,0,0,255,256,5,34,0,0,256,54,1,0,0,0,257,259,
7,1,0,0,258,257,1,0,0,0,259,260,1,0,0,0,260,258,1,0,0,0,260,261,1,0,0,0,
261,262,1,0,0,0,262,264,7,3,0,0,263,265,7,1,0,0,264,263,1,0,0,0,265,266,
1,0,0,0,266,264,1,0,0,0,266,267,1,0,0,0,267,56,1,0,0,0,268,270,7,4,0,0,269,
268,1,0,0,0,270,271,1,0,0,0,271,269,1,0,0,0,271,272,1,0,0,0,272,58,1,0,0,
0,273,274,5,47,0,0,274,275,5,47,0,0,275,279,1,0,0,0,276,278,9,0,0,0,277,
276,1,0,0,0,278,281,1,0,0,0,279,280,1,0,0,0,279,277,1,0,0,0,280,283,1,0,
0,0,281,279,1,0,0,0,282,284,5,13,0,0,283,282,1,0,0,0,283,284,1,0,0,0,284,
285,1,0,0,0,285,286,5,10,0,0,286,287,1,0,0,0,287,288,6,29,0,0,288,60,1,0,
0,0,289,290,5,47,0,0,290,291,5,42,0,0,291,295,1,0,0,0,292,294,9,0,0,0,293,
292,1,0,0,0,294,297,1,0,0,0,295,296,1,0,0,0,295,293,1,0,0,0,296,298,1,0,
0,0,297,295,1,0,0,0,298,299,5,42,0,0,299,300,5,47,0,0,300,301,1,0,0,0,301,
302,6,30,0,0,302,62,1,0,0,0,303,305,5,13,0,0,304,303,1,0,0,0,304,305,1,0,
0,0,305,306,1,0,0,0,306,307,5,10,0,0,307,64,1,0,0,0,308,310,7,5,0,0,309,
308,1,0,0,0,310,311,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,313,1,0,
0,0,313,314,6,32,0,0,314,66,1,0,0,0,315,316,5,44,0,0,316,68,1,0,0,0,16,0,
98,119,142,238,244,249,253,260,266,271,279,283,295,304,311,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class MoonlightToCLexer extends antlr4.Lexer {

    static grammarFileName = "MoonlightToC.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'('", "')'", null, "'+'", "'-'", "'*'", 
                         "'/'", "'%'", "'='", null, null, "'SerenityClass'", 
                         "'CozyCondition'", "'TwilightOption'", "'else'", 
                         "'DreamElse'", "'DreamLoop'", "'do'", "'->'", "'WHISPER'", 
                         "'{'", "'}'", "'#'", "'.'", null, null, null, null, 
                         null, null, null, null, null, "','" ];
	static symbolicNames = [ null, null, null, "TYPE", "PLUS", "MINUS", "MULT", 
                          "DIV", "MOD", "IGUAL", "OC", "OL", "SERENITYCLASS", 
                          "COZYCONDITION", "TWILIGHTOPTION", "ELSE", "DREAMYELSE", 
                          "DREAMLOOP", "DO", "ARROW", "WHISPER", "INITKEY", 
                          "FINALKEY", "GATITO", "PUNTITO", "STARSTRING", 
                          "NUM", "CHAR", "FLOAT", "ID", "LINECOMMENT", "COMMENT", 
                          "NEWLINE", "SPACES", "COMA" ];
	static ruleNames = [ "T__0", "T__1", "TYPE", "PLUS", "MINUS", "MULT", "DIV", 
                      "MOD", "IGUAL", "OC", "OL", "SERENITYCLASS", "COZYCONDITION", 
                      "TWILIGHTOPTION", "ELSE", "DREAMYELSE", "DREAMLOOP", 
                      "DO", "ARROW", "WHISPER", "INITKEY", "FINALKEY", "GATITO", 
                      "PUNTITO", "STARSTRING", "NUM", "CHAR", "FLOAT", "ID", 
                      "LINECOMMENT", "COMMENT", "NEWLINE", "SPACES", "COMA" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

MoonlightToCLexer.EOF = antlr4.Token.EOF;
MoonlightToCLexer.T__0 = 1;
MoonlightToCLexer.T__1 = 2;
MoonlightToCLexer.TYPE = 3;
MoonlightToCLexer.PLUS = 4;
MoonlightToCLexer.MINUS = 5;
MoonlightToCLexer.MULT = 6;
MoonlightToCLexer.DIV = 7;
MoonlightToCLexer.MOD = 8;
MoonlightToCLexer.IGUAL = 9;
MoonlightToCLexer.OC = 10;
MoonlightToCLexer.OL = 11;
MoonlightToCLexer.SERENITYCLASS = 12;
MoonlightToCLexer.COZYCONDITION = 13;
MoonlightToCLexer.TWILIGHTOPTION = 14;
MoonlightToCLexer.ELSE = 15;
MoonlightToCLexer.DREAMYELSE = 16;
MoonlightToCLexer.DREAMLOOP = 17;
MoonlightToCLexer.DO = 18;
MoonlightToCLexer.ARROW = 19;
MoonlightToCLexer.WHISPER = 20;
MoonlightToCLexer.INITKEY = 21;
MoonlightToCLexer.FINALKEY = 22;
MoonlightToCLexer.GATITO = 23;
MoonlightToCLexer.PUNTITO = 24;
MoonlightToCLexer.STARSTRING = 25;
MoonlightToCLexer.NUM = 26;
MoonlightToCLexer.CHAR = 27;
MoonlightToCLexer.FLOAT = 28;
MoonlightToCLexer.ID = 29;
MoonlightToCLexer.LINECOMMENT = 30;
MoonlightToCLexer.COMMENT = 31;
MoonlightToCLexer.NEWLINE = 32;
MoonlightToCLexer.SPACES = 33;
MoonlightToCLexer.COMA = 34;



